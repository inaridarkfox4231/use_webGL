コンテキストには"2D"と"webgl"があって今まで使ってきたのは"2D"
コンテキストにはAPIのすべてが詰まっている
webglではプログラマブルシェーダ、シェーダを自分で用意しないといけない
シェーダにはバーテックスシェーダとフラグメントシェーダの2種類がある
まずはwebGLコンテキストを取得してAPIの初期化。
// 画面をクリアするためのメソッド：gl.clear
// gl.clear(gl.COLOR_BUFFER_BIT);
// gl.COLOR_BUFFER_BITに設定したい色を放り込んでその色でクリアする感じ
// gl.COLOR_BUFFER_BITに色を設定するメソッドがgl.clearColor(x, y, z, w) (これらは0~1のfloat)
シェーダの基礎
固定機能パイプラインが使えないのでGLSL(OpenGL Shading Language)を使う。
(GLはGraphics Libraryの略)
バーテックスシェーダには頂点に関するすべての情報を渡す。頂点の位置とか色とか。
フラグメントシェーダは各々のピクセルに出力する色の情報を・・とかそんなような？
頂点シェーダではgl_Positionという組み込み変数にデータを渡す必要がある。
vec2~4: 2~4つの変数を持つベクトル
mat2~4: 2~4つの幅を持つ正方行列
行列に着いては管理人さんの自作ライブラリを使うことに・・
レンダリングの手順：
・HTMLからcanvasエレメントを取得
・canvasからwebGLコンテキストの取得
・シェーダのコンパイル
・モデルデータを用意
・頂点バッファ(VBO)の生成と通知
・座標変換行列の生成と通知（uniform？）
以下二つは未解説
・描画命令の発行
・canvasを更新してレンダリング

まずHTMLからcanvasエレメントを取得して、canvasからwebGLコンテキストを取得するところまではわかった（はず）。
次はシェーダのコンパイル・・シェーダの取得のところ。
次にモデルデータを用意する。VBOとかいう。頂点属性ごとに用意する。
